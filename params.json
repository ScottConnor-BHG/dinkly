{"name":"Dinkly","tagline":"Tiny, Light, and Handsome","body":"Dinkly v1.19\r\n============\r\n\r\nThe biggest little PHP framework\r\n\r\nWhat makes Dinkly special?\r\n--------------------------\r\n\r\nDinkly was built from the ground up to be simple, flexible, and easy to understand. You won't find any bloat here. What you will find is a handsome little framework that gives you everything you need and nothing you don't.\r\n\r\nFeatures\r\n--------\r\n\r\n- Easy to use and flexible MVC architecture\r\n- YAML configuration and customization\r\n- Full Composer support\r\n- Restful API\r\n- Bare-bones and flexible ORM\r\n- Data fixtures\r\n- Out-of-the-box user authentication\r\n- Ready-to-go Twitter Bootstrap admin interface\r\n\r\n\r\nInstallation\r\n------------\r\n\r\n1. Pull down the latest release from GitHub.\r\n\r\n2. From the command line (and inside the main project directory), run the following command to install basic dependencies using Composer:\r\n\r\n    `php composer.phar install`\r\n    \r\n3. Set the `web` folder to be web-accessible by your server software.   \r\n\r\n\r\nSetup Basic Admin and Authentication\r\n------------------------------------\r\n\r\n1. Update `config/db.yml` to match your environment's database connection.\r\n\r\n2. Generate the basic admin models:\r\n\r\n    `php tools/gen_models.php -s=admin -i`\r\n\r\n  This command will automatically create a new database called 'admin' if one doesn't already exist. It will also generate the necessary tables.\r\n\r\n3. Create a basic admin user:\r\n\r\n    `php tools/load_fixtures.php -s=admin`\r\n\r\n    Unless changed, the default admin user created will use 'bfett' for the username and 'password' for the password. It's pretty lame... we encourage you to change it. This can be easily accomplished by updating the fixture file: `config/fixtures/dinkly/AdminUser.yml`  \r\n\r\n\r\nCommand Line Tools\r\n------------------\r\n\r\nGenerate all Dinkly datamodel files (*will not* overwrite existing custom classes). Use the '-s' option to use the appropriate schema. To insert/update model sql, use the '-i' option.\r\n\r\n    php tools/gen_models.php -s=<schema name> [-i]\r\n\r\nGenerate a single Dinkly datamodel file. Use the '-s' option to use the appropriate schema. To insert model sql, use the '-i' option.\r\n\r\n  php tools/gen_model.php -s=<schema name> -m=<model name> [-i]\r\n\r\nLoad fixtures (preloads tables with data stored in yml files under config/fixtures)\r\n\r\n  php tools/load_fixtures.php -s=<schema name>\r\n\r\nGenerate a new Dinkly application.\r\n\r\n  php tools/gen_app.php -a=<app name>\r\n\r\nGenerate a new Dinkly module for a given application.\r\n\r\n  php tools/gen_module.php -a=<app name> -m=<module name>\r\n\r\n\r\nLicense\r\n-------\r\n\r\nDinkly is open-sourced software licensed under the MIT License.\r\n\r\n\r\nContact\r\n-------\r\n\r\n  - lewsid@lewsid.com\r\n  - github.com/lewsid\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}